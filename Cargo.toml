[package]
name = "zero2prod"
version = "0.1.0"
authors = ["ilmoi"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
path = "src/lib.rs" #could omit too, it's the default

[[bin]] #array, since we can have multiple bin crates
path = "src/main.rs"
name = "zero2prod"

[dependencies]
actix-web = "=4.0.0-beta.5"
actix-http = "=3.0.0-beta.5"
actix-service = "=2.0.0-beta.5"
rand = "0.8.3"
serde = { version = "1.0", features = ["derive"] }
config = "0.11.0"
uuid = { version = "0.8.1", features = ["v4"] }
chrono = "0.4.15"
env_logger = "0.8.3"
log = "0.4.14"
tracing = { version = "0.1", features = ["log"] } #normal tracing
tracing-futures = "0.2.5" #tracing for async stuff
tracing-subscriber = { version = "0.2.12", features = ["registry", "env-filter"] } #equivalent of set_logger for tracing
tracing-bunyan-formatter = "0.2.4" #formatter for the subscriber
tracing-log = "0.1.2" #capture logs emitted by actix's middleware
tracing-actix-web = "0.4.0-beta.4"
serde-aux = "2.2.0"
unicode-segmentation = "1.7.1"
validator = "0.13.0"
reqwest = { version = "0.11", default-features = false, features = ["json", "rustls-tls"] }

# Using table-like toml syntax to avoid a super-long line!
[dependencies.sqlx]
version = "0.5.1"
default-features = false
features = [
    "runtime-actix-rustls", #use actix runtime for futures and rustls as TLS
    "macros", #gives access to useful macros
    "postgres", #unlocks postgres specific sql
    "uuid", #support for mapping uuids to the uuid type from the uuid crate
    "chrono", #adds support for mapping SQL timestamptz to the DateTime<T> type from the chrono crate
    "migrate" #gives access to same migrate functionality as we used in the cli
]

[dev-dependencies]
actix-rt = "2"
claim = "0.5.0"
once_cell = "1.7.2"
fake = "~2.3"
quickcheck = "0.9.2"
quickcheck_macros = "0.9.1"
tokio = { version = "1", features = ["rt", "macros"] }
wiremock = "0.5.2"
serde_json = "1"